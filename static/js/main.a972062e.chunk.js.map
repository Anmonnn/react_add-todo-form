{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","id","username","getUserById","userId","usersFromServer","find","App","useState","actualTodos","setActualTodos","actualInput","setActualInput","actualOption","setActualOption","inputError","setInputError","optionError","setOptionError","refresh","event","preventDefault","trim","newTodo","Math","random","toFixed","slice","action","method","onSubmit","type","value","onChange","target","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"4OAEaA,EAAqC,SAAC,GAE7C,IAAD,IADDC,KAAQC,EACP,EADOA,KAAMC,EACb,EADaA,MAEhB,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGD,KCHMI,EAAqC,SAAC,GAE7C,IAAD,IADDC,KAAQC,EACP,EADOA,MAAOC,EACd,EADcA,UAAWR,EACzB,EADyBA,KAE5B,OACE,0BAASG,UAAWM,IAClB,WACA,CAAE,sBAAuBD,IAF3B,UAKE,oBAAIL,UAAU,kBAAd,SACGI,IAGO,OAATP,EAAgB,cAAC,EAAD,CAAUA,KAAMA,IAAmB,SCb7CU,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,yBAASR,UAAU,WAAnB,SACGQ,EAAMC,KAAI,SAAAN,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,EAAM,UAASA,EAAKO,IAASP,EAAKO,UCR3C,GACb,CACEA,GAAI,EACJZ,KAAM,gBACNa,SAAU,OACVZ,MAAO,qBAET,CACEW,GAAI,EACJZ,KAAM,eACNa,SAAU,YACVZ,MAAO,qBAET,CACEW,GAAI,EACJZ,KAAM,mBACNa,SAAU,WACVZ,MAAO,sBAET,CACEW,GAAI,EACJZ,KAAM,mBACNa,SAAU,WACVZ,MAAO,6BAET,CACEW,GAAI,EACJZ,KAAM,mBACNa,SAAU,SACVZ,MAAO,4BAET,CACEW,GAAI,EACJZ,KAAM,uBACNa,SAAU,mBACVZ,MAAO,2BAET,CACEW,GAAI,EACJZ,KAAM,kBACNa,SAAU,eACVZ,MAAO,0BAET,CACEW,GAAI,EACJZ,KAAM,2BACNa,SAAU,gBACVZ,MAAO,wBAET,CACEW,GAAI,EACJZ,KAAM,kBACNa,SAAU,WACVZ,MAAO,2BAET,CACEW,GAAI,GACJZ,KAAM,qBACNa,SAAU,iBACVZ,MAAO,2BCpDX,SAASa,EAAYC,GACnB,OAAOC,EAAgBC,MAAK,SAAAlB,GAAI,OAAIA,EAAKa,KAAOG,MAAW,KAG7D,IAAML,ECXS,CACb,CACEE,GAAI,EACJN,MAAO,qBACPC,WAAW,EACXQ,OAAQ,GAEV,CACEH,GAAI,GACJN,MAAO,kBACPC,WAAW,EACXQ,OAAQ,GAEV,CACEH,GAAI,EACJN,MAAO,qCACPC,WAAW,EACXQ,OAAQ,IDNkBJ,KAAI,SAAAN,GAAI,kCACjCA,GADiC,IAEpCN,KAAMe,EAAYT,EAAKU,aAGZG,EAAM,WACjB,MAAsCC,mBAAS,YAAIT,IAAnD,mBAAOU,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAwCJ,mBAAS,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAoCN,oBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAAsCR,oBAAS,GAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KAYA,IAAMC,EAAU,SAACC,GAef,GAdAA,EAAMC,iBAEDV,EAAYW,OAGfN,GAAc,GAFdA,GAAc,GAMdE,EADmB,IAAjBL,GAMAF,EAAYW,QAA2B,IAAjBT,EAAoB,CAC5C,IAAMU,EAAU,CACdtB,IAtBGuB,KAAKC,SACTC,QAAQ,IACRC,MAAM,GAqBLhC,MAAOgB,EACPf,WAAW,EACXQ,QAASS,EACTzB,KAAMe,EAAYU,IA/BPnB,EAkCL6B,EAjCVb,EAAe,GAAD,mBAAKD,GAAL,CAAkBf,KAkC9BkB,EAAe,IACfE,EAAgB,GApCJ,IAACpB,GAwCjB,OACE,sBAAKH,UAAU,MAAf,UACE,+CAEA,uBAAMqC,OAAO,aAAaC,OAAO,OAAOC,SAAUX,EAAlD,UACE,sBAAK5B,UAAU,QAAf,mBAEE,uBACEwC,KAAK,OACL,UAAQ,aACRC,MAAOrB,EACPsB,SAAU,SAAAb,GAAK,OAAIR,EAAeQ,EAAMc,OAAOF,QAC/CG,YAAY,kBAEbpB,IAAeJ,EACZ,sBAAMpB,UAAU,QAAhB,kCAAsD,QAG5D,sBAAKA,UAAU,QAAf,kBAEE,yBACE,UAAQ,aACRyC,MAAOnB,EACPoB,SAAU,SAAAb,GAAK,OAAIN,GAAiBM,EAAMc,OAAOF,QAHnD,UAKE,wBAAQA,MAAM,IAAII,UAAQ,EAA1B,2BACC/B,EAAgBL,KACf,SAAAZ,GAAI,OAAI,wBAAQ4C,MAAO5C,EAAKa,GAApB,SAAyBb,EAAKC,aAIzC4B,GAAgC,IAAjBJ,EACZ,sBAAMtB,UAAU,QAAhB,kCAAsD,QAG5D,wBACEwC,KAAK,SACL,UAAQ,eACRD,SAAUX,EAHZ,oBASF,cAAC,EAAD,CAAUpB,MAAOU,QExGvB4B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a972062e.chunk.js","sourcesContent":["import { User } from '../../Types/Types';\n\nexport const UserInfo: React.FC<{ user: User }> = (\n  { user: { name, email } },\n) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo, User } from '../../Types/Types';\n\nexport const TodoInfo: React.FC<{ todo: Todo }> = (\n  { todo: { title, completed, user } },\n) => {\n  return (\n    <article className={classNames(\n      'TodoInfo',\n      { 'TodoInfo--completed': completed },\n    )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user !== null ? <UserInfo user={user as User} /> : null}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todos } from '../../Types/Types';\n\nexport const TodoList: React.FC<Todos> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} data-id={todo.id} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './Types/Types';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst todos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [actualTodos, setActualTodos] = useState([...todos]);\n  const [actualInput, setActualInput] = useState('');\n  const [actualOption, setActualOption] = useState(0);\n  const [inputError, setInputError] = useState(false);\n  const [optionError, setOptionError] = useState(false);\n\n  const addTodo = (todo: Todo) => {\n    setActualTodos([...actualTodos, todo]);\n  };\n\n  function getRandomDigits() {\n    return Math.random()\n      .toFixed(16)\n      .slice(2);\n  }\n\n  const refresh = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!actualInput.trim()) {\n      setInputError(true);\n    } else {\n      setInputError(false);\n    }\n\n    if (actualOption === 0) {\n      setOptionError(true);\n    } else {\n      setOptionError(false);\n    }\n\n    if (actualInput.trim() && actualOption !== 0) {\n      const newTodo = {\n        id: +getRandomDigits(),\n        title: actualInput,\n        completed: false,\n        userId: +actualOption,\n        user: getUserById(actualOption),\n      };\n\n      addTodo(newTodo);\n      setActualInput('');\n      setActualOption(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={refresh}>\n        <div className=\"field\">\n          Title:\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={actualInput}\n            onChange={event => setActualInput(event.target.value)}\n            placeholder=\"Enter a title\"\n          />\n          {inputError && !actualInput\n            ? <span className=\"error\">Please enter a title</span> : null}\n        </div>\n\n        <div className=\"field\">\n          User:\n          <select\n            data-cy=\"userSelect\"\n            value={actualOption}\n            onChange={event => setActualOption(+event.target.value)}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(\n              user => <option value={user.id}>{user.name}</option>,\n            )}\n          </select>\n\n          {optionError && actualOption === 0\n            ? <span className=\"error\">Please choose a user</span> : null}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onSubmit={refresh}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={actualTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}